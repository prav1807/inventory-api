openapi: 3.0.3
info:
  description: Api Documentation
  version: '1.0'
  title: Project Template Documentation
paths:
  /api/items:
    post:
      tags:
        - item
      summary: Create a new item in the inventory
      operationId: createItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
        400:
          description: Bad Request - Invalid input data
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /api/items/{itemId}:
    get:
      tags:
        - item
      summary: Find item by ID
      operationId: getItemById
      parameters:
        - $ref: '#/components/parameters/ItemId'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found - Item does not exist

    put:
      tags:
        - item
      summary: Update an existing item
      operationId: updateItem
      parameters:
        - $ref: '#/components/parameters/ItemId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
        400:
          description: Bad Request - Invalid input data
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found - Item does not exist

    delete:
      tags:
        - item
      summary: Delete an item
      operationId: deleteItem
      parameters:
        - $ref: '#/components/parameters/ItemId'
      responses:
        204:
          description: No Content - Successful deletion
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found - Item does not exist

components:
  schemas:
    ItemRequest:
      type: object
      required:
        - name
        - quantity
        - price
      properties:
        name:
          type: string
          example: "Laptop"
        quantity:
          type: integer
          format: int32
          example: 10
        price:
          type: number
          format: float
          example: 999.99

    ItemResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "Laptop"
        quantity:
          type: integer
          format: int32
          example: 10
        price:
          type: number
          format: float
          example: 999.99

  parameters:
    ItemId:
      name: itemId
      in: path
      description: ID of the item
      required: true
      schema:
        type: string
        format: uuid
        example: "123e4567-e89b-12d3-a456-426614174000"